*** ./smali/android/webkit/WebSettingsClassic.smali	2015-12-08 00:14:02.131231797 +0800
--- /data/patchrom_jb/s6818/temp/new_smali/framework.jar.out/./smali/android/webkit/WebSettingsClassic.smali	2015-12-08 00:12:04.047234282 +0800
***************
*** 54,59 ****
--- 54,61 ----
  
  .field private mAutoFillProfile:Landroid/webkit/WebSettingsClassic$AutoFillProfile;
  
+ .field private mBlockFloatPopupWindows:Z
+ 
  .field private mBlockNetworkImage:Z
  
  .field private mBlockNetworkLoads:Z
***************
*** 102,107 ****
--- 104,111 ----
  
  .field private mHardwareAccelSkia:Z
  
+ .field private mIsWebapp:Z
+ 
  .field private mJavaScriptCanOpenWindowsAutomatically:Z
  
  .field private mJavaScriptEnabled:Z
***************
*** 116,121 ****
--- 120,127 ----
  
  .field private mLoadsImagesAutomatically:Z
  
+ .field private mLoadsImagesOnDemand:Z
+ 
  .field private mMaximumDecodedImageSize:J
  
  .field private mMinimumFontSize:I
***************
*** 209,214 ****
--- 215,222 ----
  
      invoke-direct {p0}, Landroid/webkit/WebSettings;-><init>()V
  
+     iput-boolean v3, p0, Landroid/webkit/WebSettingsClassic;->mIsWebapp:Z
+ 
      iput-boolean v3, p0, Landroid/webkit/WebSettingsClassic;->mSyncPending:Z
  
      sget-object v1, Landroid/webkit/WebSettings$LayoutAlgorithm;->NARROW_COLUMNS:Landroid/webkit/WebSettings$LayoutAlgorithm;
***************
*** 255,260 ****
--- 263,270 ----
  
      iput-boolean v2, p0, Landroid/webkit/WebSettingsClassic;->mLoadsImagesAutomatically:Z
  
+     iput-boolean v3, p0, Landroid/webkit/WebSettingsClassic;->mLoadsImagesOnDemand:Z
+ 
      iput-boolean v3, p0, Landroid/webkit/WebSettingsClassic;->mBlockNetworkImage:Z
  
      iput-boolean v3, p0, Landroid/webkit/WebSettingsClassic;->mJavaScriptEnabled:Z
***************
*** 365,370 ****
--- 375,382 ----
  
      iput-boolean v2, p0, Landroid/webkit/WebSettingsClassic;->mPasswordEchoEnabled:Z
  
+     iput-boolean v2, p0, Landroid/webkit/WebSettingsClassic;->mBlockFloatPopupWindows:Z
+ 
      iput-boolean v2, p0, Landroid/webkit/WebSettingsClassic;->mUseWebViewBackgroundForOverscroll:Z
  
      new-instance v1, Landroid/webkit/WebSettingsClassic$EventHandler;
***************
*** 1271,1276 ****
--- 1283,1311 ----
      throw v0
  .end method
  
+ .method public declared-synchronized getBlockFloatPopupWindows()Z
+     .locals 1
+ 
+     .prologue
+     monitor-enter p0
+ 
+     :try_start_0
+     iget-boolean v0, p0, Landroid/webkit/WebSettingsClassic;->mBlockFloatPopupWindows:Z
+     :try_end_0
+     .catchall {:try_start_0 .. :try_end_0} :catchall_0
+ 
+     monitor-exit p0
+ 
+     return v0
+ 
+     :catchall_0
+     move-exception v0
+ 
+     monitor-exit p0
+ 
+     throw v0
+ .end method
+ 
  .method public declared-synchronized getBlockNetworkImage()Z
      .locals 1
  
***************
*** 2678,2683 ****
--- 2713,2749 ----
      throw v0
  .end method
  
+ .method public declared-synchronized setBlockFloatPopupWindows(Z)V
+     .locals 1
+     .parameter "flag"
+ 
+     .prologue
+     monitor-enter p0
+ 
+     :try_start_0
+     iget-boolean v0, p0, Landroid/webkit/WebSettingsClassic;->mBlockFloatPopupWindows:Z
+ 
+     if-eq v0, p1, :cond_0
+ 
+     iput-boolean p1, p0, Landroid/webkit/WebSettingsClassic;->mBlockFloatPopupWindows:Z
+ 
+     invoke-direct {p0}, Landroid/webkit/WebSettingsClassic;->postSync()V
+     :try_end_0
+     .catchall {:try_start_0 .. :try_end_0} :catchall_0
+ 
+     :cond_0
+     monitor-exit p0
+ 
+     return-void
+ 
+     :catchall_0
+     move-exception v0
+ 
+     monitor-exit p0
+ 
+     throw v0
+ .end method
+ 
  .method public declared-synchronized setBlockNetworkImage(Z)V
      .locals 1
      .parameter "flag"
***************
*** 3484,3489 ****
--- 3550,3586 ----
      throw v0
  .end method
  
+ .method public declared-synchronized setLoadsImagesOnDemand(Z)V
+     .locals 1
+     .parameter "flag"
+ 
+     .prologue
+     monitor-enter p0
+ 
+     :try_start_0
+     iget-boolean v0, p0, Landroid/webkit/WebSettingsClassic;->mLoadsImagesOnDemand:Z
+ 
+     if-eq v0, p1, :cond_0
+ 
+     iput-boolean p1, p0, Landroid/webkit/WebSettingsClassic;->mLoadsImagesOnDemand:Z
+ 
+     invoke-direct {p0}, Landroid/webkit/WebSettingsClassic;->postSync()V
+     :try_end_0
+     .catchall {:try_start_0 .. :try_end_0} :catchall_0
+ 
+     :cond_0
+     monitor-exit p0
+ 
+     return-void
+ 
+     :catchall_0
+     move-exception v0
+ 
+     monitor-exit p0
+ 
+     throw v0
+ .end method
+ 
  .method public setMaximumDecodedImageSize(J)V
      .locals 2
      .parameter "size"
***************
*** 4578,4580 ****
--- 4675,4726 ----
  
      throw v1
  .end method
+ 
+ .method public declared-synchronized getIsWebapp()Z
+     .locals 1
+ 
+     .prologue
+     monitor-enter p0
+ 
+     :try_start_0
+     iget-boolean v0, p0, Landroid/webkit/WebSettingsClassic;->mIsWebapp:Z
+     :try_end_0
+     .catchall {:try_start_0 .. :try_end_0} :catchall_0
+ 
+     monitor-exit p0
+ 
+     return v0
+ 
+     :catchall_0
+     move-exception v0
+ 
+     monitor-exit p0
+ 
+     throw v0
+ .end method
+ 
+ .method public declared-synchronized setIsWebapp(Z)V
+     .locals 1
+     .parameter "isWebapp"
+ 
+     .prologue
+     monitor-enter p0
+ 
+     :try_start_0
+     iput-boolean p1, p0, Landroid/webkit/WebSettingsClassic;->mIsWebapp:Z
+ 
+     invoke-direct {p0}, Landroid/webkit/WebSettingsClassic;->postSync()V
+     :try_end_0
+     .catchall {:try_start_0 .. :try_end_0} :catchall_0
+ 
+     monitor-exit p0
+ 
+     return-void
+ 
+     :catchall_0
+     move-exception v0
+ 
+     monitor-exit p0
+ 
+     throw v0
+ .end method
